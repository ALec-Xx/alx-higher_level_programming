# 3-say_my_name.txt


===========================
HOW TO USE 3-say_my_name.py
===========================

Usage
=====
``say_my_name(...)`` function prints My name is <first name> <last name>

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name(Osagioduwa, Idele)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    NameError: name 'Osagioduwa' is not defined

    >>> say_my_name("Osagioduwa", "Idele")
    My name is Osagioduwa Idele

Last Name argument is an empty string
::

    >>> say_my_name("Osagioduwa")
    My name is Osagioduwa 

First Name and Last Name must be strings
::

    >>> say_my_name(12, "Idele")
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "<stdin>", line 4, in say_my_name
    TypeError: first_name must be a string

    >>> say_my_name("Osas", 22)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "<stdin>", line 6, in say_my_name
    TypeError: last_name must be a string

No Arguments
::

    >>> say_my_name()
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

::

    >>> say_my_name("[Osas]", "Idele")
    My name is [Osas] Idele

::
    >>> say_my_name([Osas], "Idele")
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    NameError: name 'Osas' is not defined

    >>> say_my_name(["Osas"], "Idele")
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "<stdin>", line 4, in say_my_name
    TypeError: first_name must be a string

    >>> say_my_name(None, "Idele")
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "<stdin>", line 4, in say_my_name
    TypeError: first_name must be a string

::

    >>> say_my_name("", "Idele")
    My name is  Idele

    >>> say_my_name("")
    My name is  

    >>> say_my_name("", "")
    My name is  
